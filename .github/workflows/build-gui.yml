name: build-gui

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: ${{ matrix.build }} / rust ${{ matrix.rustver }} / node ${{ matrix.nodever }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            nodever: 20
            rustver: 1.74
            trunkver: 0.18
            tauriver: 1.5
            bin: |
              target/release/bundle/deb/*.deb
              target/release/bundle/appimage/*.AppImage
          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
            nodever: 20
            rustver: 1.74
            trunkver: 0.18
            tauriver: 1.5
            bin: |
              target/release/bundle/msi/*.msi
              target/release/bundle/nsis/*.exe

    steps:

    - name: Install System Dependencies
      if: startsWith(matrix.os, 'ubuntu') == true
      run: |
        sudo apt update && \
        sudo apt install -y \
          libwebkit2gtk-4.0-dev \
          build-essential \
          curl \
          wget \
          file \
          libssl-dev \
          libgtk-3-dev \
          libayatana-appindicator3-dev \
          librsvg2-dev \
          libsoup2.4-dev \
          libjavascriptcoregtk-4.0-dev

    - name: Checkout
      uses: actions/checkout@v4

    - name: Cache build artifacts
      uses: actions/cache@v3
      with:
        key:  gui_${{ matrix.target }}_artifacts
        path: |
          ./target
          ~/.cargo

    - name: Install node ${{ matrix.nodever }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.nodever }}

    - name: Install toolchain ${{ matrix.rustver }}
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rustver }}
        targets: ${{ matrix.target }}, wasm32-unknown-unknown

    # - name: Show installed versions
    #   run: |
    #     rustc -V
    #     cargo -V
    #     rustup -V
    #     node -v || node --version

    - name: Install cargo-binstall
      uses: cargo-bins/cargo-binstall@main

    - name: Install trunk ${{ matrix.trunkver }}
      run: cargo binstall --version ${{ matrix.trunkver }} --target ${{ matrix.target }} --locked -y trunk

    - name: Install tauri-cli ${{ matrix.tauriver }}
      run: cargo binstall --version ${{ matrix.tauriver }} --target ${{ matrix.target }} --locked -y tauri-cli

    - name: Install node packages
      working-directory: ./web_frontend
      run: npm ci

    # - name: Build web frontend
    #   run: trunk build --release
    #   working-directory: ./web_frontend

    # - name: Build gui app
    #   uses: tauri-apps/tauri-action@v0.4
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build tauri app
      run: cargo tauri build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Release privaxy-gui ${{ github.ref_name}}-${{ github.sha }}
      uses: softprops/action-gh-release@v1
      # if: startsWith(github.ref, 'refs/tags/') && startsWith(matrix.os, 'ubuntu')
      with:
        name: privaxy-gui ${{ github.ref_name}}-${{ github.sha }}
        tag_name: gui-${{ github.sha }}
        target_commitish: ${{ github.sha }}
        draft: true
        prerelease: true
        generate_release_notes: true
        append_body: true
        files: ${{ matrix.bin }}

